#!/bin/bash
#

# Copyright (c) 2019 Cable Television Laboratories, Inc.
# Licensed under the BSD+Patent (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#          https://opensource.org/licenses/BSDplusPatent
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# THIS IS UPDATED ON ServerSide Sync Site
# Update worker script to be called by WCCF generalized update script.
# REQUIRED:: this script to reside in /etc/config/ (matching config
# rsync loc).
#
# Example cron invocation of this worker script:
#    /usr/sbin/wccf_util_update.sh wccf_util_update_worker.sh
#
# ===========================================================================
# The usual case is for this cycle to be a no-op. Any other process should
# return this script to a state which results in no operation. An easy
# approach to acheive this is shown in function return_to_null_behavior to
# FINISH by heading the first 36 lines from this file to a tmp file, then
# moving it back onto itself.
#
# Function return_to_null_behavior() does this! THEREFORE, always end your
# custom implementation with a call to that function.
# ===========================================================================
WORKER_SCRIPT_LOC=/etc/config
WORKER_SCRIPT_NAME=$(basename $0)
THIS_FILE=$WORKER_SCRIPT_LOC/$WORKER_SCRIPT_NAME
HEAD_LINES=36
ASM_WORKER_TMP=/tmp/__ASM_WORKER_TMP__
# ===========================================================
function return_to_null_behavior ()
{
    NOW=`date +%s`; touch ~/update_worker.update.$NOW
    head -n $HEAD_LINES $THIS_FILE > $ASM_WORKER_TMP
    mv -f $ASM_WORKER_TMP $THIS_FILE
    chmod 755 $THIS_FILE
}
# == Do Not Change Above == LINE 36 == Do Not Change Above ==

NOW=`date +%s`; touch ~/pre-timeshift.$NOW
/etc/config/cron_timeshift.sh /etc/config/wccf_sensors.cron.TIMESHIFT &
NOW=`date +%s`; touch ~/pos-timeshift.$NOW

return_to_null_behavior
